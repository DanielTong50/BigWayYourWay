import { c as create_ssr_component, e as escape, f as each, h as null_to_empty } from "../../../chunks/ssr.js";
const css = {
  code: "main.svelte-18ccqjy.svelte-18ccqjy{padding:2rem;max-width:1200px;margin:0 auto}h1.svelte-18ccqjy.svelte-18ccqjy{margin-bottom:2rem}.status-bar.svelte-18ccqjy.svelte-18ccqjy{display:flex;gap:2rem;align-items:center;margin-bottom:2rem;padding:1rem;background:#f5f5f5;border-radius:8px}.status-item.svelte-18ccqjy.svelte-18ccqjy{font-size:1.1rem}.refresh-button.svelte-18ccqjy.svelte-18ccqjy{margin-left:auto;padding:0.5rem 1rem;background:#4CAF50;color:white;border:none;border-radius:4px;cursor:pointer}.refresh-button.svelte-18ccqjy.svelte-18ccqjy:disabled{background:#ccc;cursor:not-allowed}.waitlist-container.svelte-18ccqjy.svelte-18ccqjy{background:white;border-radius:8px;box-shadow:0 2px 4px rgba(0,0,0,0.1);overflow:auto;margin-bottom:2rem}table.svelte-18ccqjy.svelte-18ccqjy{width:100%;border-collapse:collapse}th.svelte-18ccqjy.svelte-18ccqjy,td.svelte-18ccqjy.svelte-18ccqjy{padding:1rem;text-align:left;border-bottom:1px solid #eee}th.svelte-18ccqjy.svelte-18ccqjy{background:#f5f5f5;font-weight:600}tr.waiting.svelte-18ccqjy.svelte-18ccqjy{background:white}tr.completed.svelte-18ccqjy.svelte-18ccqjy{background:#f9f9f9;color:#666}.remove-button.svelte-18ccqjy.svelte-18ccqjy{background:#ff4444;color:white;border:none;padding:0.5rem 1rem;border-radius:4px;cursor:pointer}.remove-button.svelte-18ccqjy.svelte-18ccqjy:hover{background:#ff0000}.error-message.svelte-18ccqjy.svelte-18ccqjy{background-color:#ffe6e6;border:1px solid #ffb3b3;padding:1rem;border-radius:8px;margin-bottom:1rem;color:#cc0000}.no-data.svelte-18ccqjy.svelte-18ccqjy{padding:2rem;text-align:center;color:#666}.debug-section.svelte-18ccqjy.svelte-18ccqjy{margin-top:2rem;padding:1rem;background:#f5f5f5;border-radius:8px}.debug-section.svelte-18ccqjy pre.svelte-18ccqjy{white-space:pre-wrap;word-wrap:break-word}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n  import { onMount } from 'svelte';\\n  \\n  let waitlist = [];\\n  let loading = true;\\n  let error = null;\\n  let lastRefresh = null;\\n  let debugInfo = null;\\n\\n  onMount(async () => {\\n    await fetchWaitlist();\\n    // Refresh data every 30 seconds\\n    setInterval(fetchWaitlist, 30000);\\n  });\\n\\n  async function fetchWaitlist() {\\n    try {\\n      loading = true;\\n      error = null;\\n      \\n      // Get debug info\\n      const debugResponse = await fetch('/api/waitlist/debug');\\n      const debugData = await debugResponse.json();\\n      debugInfo = debugData;\\n\\n      // Get waitlist\\n      const response = await fetch('/api/waitlist/all');\\n      const data = await response.json();\\n      \\n      if (data.error) {\\n        throw new Error(data.error);\\n      }\\n      \\n      if (data.waitlist) {\\n        waitlist = data.waitlist;\\n        lastRefresh = new Date();\\n      }\\n    } catch (err) {\\n      console.error('Error fetching waitlist:', err);\\n      error = err.message || 'Failed to load waitlist data';\\n    } finally {\\n      loading = false;\\n    }\\n  }\\n\\n  async function removeFromWaitlist(id) {\\n    if (!confirm('Are you sure you want to remove this party from the waitlist?')) {\\n      return;\\n    }\\n\\n    try {\\n      const response = await fetch(\`/api/waitlist/\${id}\`, {\\n        method: 'DELETE'\\n      });\\n      const data = await response.json();\\n      \\n      if (!response.ok) {\\n        throw new Error(data.error || 'Failed to remove from waitlist');\\n      }\\n      \\n      await fetchWaitlist();\\n    } catch (err) {\\n      console.error('Error removing from waitlist:', err);\\n      error = err.message || 'Failed to remove from waitlist';\\n    }\\n  }\\n\\n  function formatDate(dateString) {\\n    return new Date(dateString).toLocaleString();\\n  }\\n\\n  function formatPhoneNumber(phone) {\\n    const cleaned = phone.replace(/\\\\D/g, '');\\n    if (cleaned.length === 10) {\\n      return \`(\${cleaned.slice(0,3)}) \${cleaned.slice(3,6)}-\${cleaned.slice(6)}\`;\\n    }\\n    return phone;\\n  }\\n<\/script>\\n\\n<main>\\n  <h1>Waitlist Admin</h1>\\n\\n  <div class=\\"status-bar\\">\\n    <div class=\\"status-item\\">\\n      <strong>Total Waiting:</strong> {waitlist.filter(e => e.status === 'waiting').length}\\n    </div>\\n    {#if lastRefresh}\\n      <div class=\\"status-item\\">\\n        <strong>Last Updated:</strong> {formatDate(lastRefresh)}\\n      </div>\\n    {/if}\\n    <button class=\\"refresh-button\\" on:click={fetchWaitlist} disabled={loading}>\\n      {loading ? 'Refreshing...' : 'Refresh Now'}\\n    </button>\\n  </div>\\n\\n  {#if error}\\n    <div class=\\"error-message\\">\\n      <p>{error}</p>\\n    </div>\\n  {/if}\\n\\n  {#if loading && !waitlist.length}\\n    <p>Loading waitlist data...</p>\\n  {:else}\\n    <div class=\\"waitlist-container\\">\\n      <table>\\n        <thead>\\n          <tr>\\n            <th>Position</th>\\n            <th>Name</th>\\n            <th>Phone</th>\\n            <th>Party Size</th>\\n            <th>Time Added</th>\\n            <th>Status</th>\\n            <th>Actions</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          {#each waitlist as entry, i}\\n            <tr class={entry.status === 'waiting' ? 'waiting' : 'completed'}>\\n              <td>{entry.status === 'waiting' ? waitlist.filter(e => e.status === 'waiting').indexOf(entry) + 1 : '-'}</td>\\n              <td>{entry.name}</td>\\n              <td>{formatPhoneNumber(entry.phone)}</td>\\n              <td>{entry.party_size}</td>\\n              <td>{formatDate(entry.created_at)}</td>\\n              <td>{entry.status}</td>\\n              <td>\\n                {#if entry.status === 'waiting'}\\n                  <button \\n                    class=\\"remove-button\\"\\n                    on:click={() => removeFromWaitlist(entry.id)}\\n                  >\\n                    Remove\\n                  </button>\\n                {/if}\\n              </td>\\n            </tr>\\n          {/each}\\n        </tbody>\\n      </table>\\n\\n      {#if waitlist.length === 0}\\n        <p class=\\"no-data\\">No entries in the waitlist</p>\\n      {/if}\\n    </div>\\n\\n    {#if debugInfo}\\n      <div class=\\"debug-section\\">\\n        <h2>Debug Information</h2>\\n        <pre>{JSON.stringify(debugInfo, null, 2)}</pre>\\n      </div>\\n    {/if}\\n  {/if}\\n</main>\\n\\n<style>\\n  main {\\n    padding: 2rem;\\n    max-width: 1200px;\\n    margin: 0 auto;\\n  }\\n\\n  h1 {\\n    margin-bottom: 2rem;\\n  }\\n\\n  .status-bar {\\n    display: flex;\\n    gap: 2rem;\\n    align-items: center;\\n    margin-bottom: 2rem;\\n    padding: 1rem;\\n    background: #f5f5f5;\\n    border-radius: 8px;\\n  }\\n\\n  .status-item {\\n    font-size: 1.1rem;\\n  }\\n\\n  .refresh-button {\\n    margin-left: auto;\\n    padding: 0.5rem 1rem;\\n    background: #4CAF50;\\n    color: white;\\n    border: none;\\n    border-radius: 4px;\\n    cursor: pointer;\\n  }\\n\\n  .refresh-button:disabled {\\n    background: #ccc;\\n    cursor: not-allowed;\\n  }\\n\\n  .waitlist-container {\\n    background: white;\\n    border-radius: 8px;\\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\\n    overflow: auto;\\n    margin-bottom: 2rem;\\n  }\\n\\n  table {\\n    width: 100%;\\n    border-collapse: collapse;\\n  }\\n\\n  th, td {\\n    padding: 1rem;\\n    text-align: left;\\n    border-bottom: 1px solid #eee;\\n  }\\n\\n  th {\\n    background: #f5f5f5;\\n    font-weight: 600;\\n  }\\n\\n  tr.waiting {\\n    background: white;\\n  }\\n\\n  tr.completed {\\n    background: #f9f9f9;\\n    color: #666;\\n  }\\n\\n  .remove-button {\\n    background: #ff4444;\\n    color: white;\\n    border: none;\\n    padding: 0.5rem 1rem;\\n    border-radius: 4px;\\n    cursor: pointer;\\n  }\\n\\n  .remove-button:hover {\\n    background: #ff0000;\\n  }\\n\\n  .error-message {\\n    background-color: #ffe6e6;\\n    border: 1px solid #ffb3b3;\\n    padding: 1rem;\\n    border-radius: 8px;\\n    margin-bottom: 1rem;\\n    color: #cc0000;\\n  }\\n\\n  .no-data {\\n    padding: 2rem;\\n    text-align: center;\\n    color: #666;\\n  }\\n\\n  .debug-section {\\n    margin-top: 2rem;\\n    padding: 1rem;\\n    background: #f5f5f5;\\n    border-radius: 8px;\\n  }\\n\\n  .debug-section pre {\\n    white-space: pre-wrap;\\n    word-wrap: break-word;\\n  }\\n</style> "],"names":[],"mappings":"AA8JE,kCAAK,CACH,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,CAAC,CAAC,IACZ,CAEA,gCAAG,CACD,aAAa,CAAE,IACjB,CAEA,yCAAY,CACV,OAAO,CAAE,IAAI,CACb,GAAG,CAAE,IAAI,CACT,WAAW,CAAE,MAAM,CACnB,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,OAAO,CACnB,aAAa,CAAE,GACjB,CAEA,0CAAa,CACX,SAAS,CAAE,MACb,CAEA,6CAAgB,CACd,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,MAAM,CAAC,IAAI,CACpB,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,OACV,CAEA,6CAAe,SAAU,CACvB,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,WACV,CAEA,iDAAoB,CAClB,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACrC,QAAQ,CAAE,IAAI,CACd,aAAa,CAAE,IACjB,CAEA,mCAAM,CACJ,KAAK,CAAE,IAAI,CACX,eAAe,CAAE,QACnB,CAEA,gCAAE,CAAE,gCAAG,CACL,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAC3B,CAEA,gCAAG,CACD,UAAU,CAAE,OAAO,CACnB,WAAW,CAAE,GACf,CAEA,EAAE,sCAAS,CACT,UAAU,CAAE,KACd,CAEA,EAAE,wCAAW,CACX,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,IACT,CAEA,4CAAe,CACb,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,MAAM,CAAC,IAAI,CACpB,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,OACV,CAEA,4CAAc,MAAO,CACnB,UAAU,CAAE,OACd,CAEA,4CAAe,CACb,gBAAgB,CAAE,OAAO,CACzB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,GAAG,CAClB,aAAa,CAAE,IAAI,CACnB,KAAK,CAAE,OACT,CAEA,sCAAS,CACP,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,IACT,CAEA,4CAAe,CACb,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,OAAO,CACnB,aAAa,CAAE,GACjB,CAEA,6BAAc,CAAC,kBAAI,CACjB,WAAW,CAAE,QAAQ,CACrB,SAAS,CAAE,UACb"}`
};
function formatDate(dateString) {
  return new Date(dateString).toLocaleString();
}
function formatPhoneNumber(phone) {
  const cleaned = phone.replace(/\D/g, "");
  if (cleaned.length === 10) {
    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6)}`;
  }
  return phone;
}
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let waitlist = [];
  $$result.css.add(css);
  return `<main class="svelte-18ccqjy"><h1 class="svelte-18ccqjy" data-svelte-h="svelte-omdrwe">Waitlist Admin</h1> <div class="status-bar svelte-18ccqjy"><div class="status-item svelte-18ccqjy"><strong data-svelte-h="svelte-16s4w4h">Total Waiting:</strong> ${escape(waitlist.filter((e) => e.status === "waiting").length)}</div> ${``} <button class="refresh-button svelte-18ccqjy" ${"disabled"}>${escape("Refreshing...")}</button></div> ${``} ${!waitlist.length ? `<p data-svelte-h="svelte-pjfdmx">Loading waitlist data...</p>` : `<div class="waitlist-container svelte-18ccqjy"><table class="svelte-18ccqjy"><thead data-svelte-h="svelte-w1bkh9"><tr><th class="svelte-18ccqjy">Position</th> <th class="svelte-18ccqjy">Name</th> <th class="svelte-18ccqjy">Phone</th> <th class="svelte-18ccqjy">Party Size</th> <th class="svelte-18ccqjy">Time Added</th> <th class="svelte-18ccqjy">Status</th> <th class="svelte-18ccqjy">Actions</th></tr></thead> <tbody>${each(waitlist, (entry, i) => {
    return `<tr class="${escape(null_to_empty(entry.status === "waiting" ? "waiting" : "completed"), true) + " svelte-18ccqjy"}"><td class="svelte-18ccqjy">${escape(entry.status === "waiting" ? waitlist.filter((e) => e.status === "waiting").indexOf(entry) + 1 : "-")}</td> <td class="svelte-18ccqjy">${escape(entry.name)}</td> <td class="svelte-18ccqjy">${escape(formatPhoneNumber(entry.phone))}</td> <td class="svelte-18ccqjy">${escape(entry.party_size)}</td> <td class="svelte-18ccqjy">${escape(formatDate(entry.created_at))}</td> <td class="svelte-18ccqjy">${escape(entry.status)}</td> <td class="svelte-18ccqjy">${entry.status === "waiting" ? `<button class="remove-button svelte-18ccqjy" data-svelte-h="svelte-rc61dh">Remove
                  </button>` : ``}</td> </tr>`;
  })}</tbody></table> ${waitlist.length === 0 ? `<p class="no-data svelte-18ccqjy" data-svelte-h="svelte-8oj6ox">No entries in the waitlist</p>` : ``}</div> ${``}`} </main>`;
});
export {
  Page as default
};
